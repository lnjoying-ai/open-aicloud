/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * ScannerRegistrationSettings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class ScannerRegistrationSettings
{
    @JsonProperty("url")
    private String url = null;

    @JsonProperty("access_credential")
    private String accessCredential = null;

    @JsonProperty("name")
    private String name = null;

    @JsonProperty("auth")
    private String auth = "";

    public ScannerRegistrationSettings url(String url)
    {
        this.url = url;
        return this;
    }

    /**
     * A base URL of the scanner adapter.
     *
     * @return url
     **/
    @ApiModelProperty(example = "http://harbor-scanner-trivy:8080", required = true, value = "A base URL of the scanner adapter.")
    public String getUrl()
    {
        return url;
    }

    public void setUrl(String url)
    {
        this.url = url;
    }

    public ScannerRegistrationSettings accessCredential(String accessCredential)
    {
        this.accessCredential = accessCredential;
        return this;
    }

    /**
     * An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API.
     *
     * @return accessCredential
     **/
    @ApiModelProperty(example = "Bearer: JWTTOKENGOESHERE", value = "An optional value of the HTTP Authorization header sent with each request to the Scanner Adapter API. ")
    public String getAccessCredential()
    {
        return accessCredential;
    }

    public void setAccessCredential(String accessCredential)
    {
        this.accessCredential = accessCredential;
    }

    public ScannerRegistrationSettings name(String name)
    {
        this.name = name;
        return this;
    }

    /**
     * The name of this registration
     *
     * @return name
     **/
    @ApiModelProperty(example = "Trivy", required = true, value = "The name of this registration")
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    public ScannerRegistrationSettings auth(String auth)
    {
        this.auth = auth;
        return this;
    }

    /**
     * Specify what authentication approach is adopted for the HTTP communications. Supported types Basic\&quot;, \&quot;Bearer\&quot; and api key header \&quot;X-ScannerAdapter-API-Key\&quot;
     *
     * @return auth
     **/
    @ApiModelProperty(value = "Specify what authentication approach is adopted for the HTTP communications. Supported types Basic\", \"Bearer\" and api key header \"X-ScannerAdapter-API-Key\" ")
    public String getAuth()
    {
        return auth;
    }

    public void setAuth(String auth)
    {
        this.auth = auth;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ScannerRegistrationSettings scannerRegistrationSettings = (ScannerRegistrationSettings) o;
        return Objects.equals(this.url, scannerRegistrationSettings.url) &&
                Objects.equals(this.accessCredential, scannerRegistrationSettings.accessCredential) &&
                Objects.equals(this.name, scannerRegistrationSettings.name) &&
                Objects.equals(this.auth, scannerRegistrationSettings.auth);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(url, accessCredential, name, auth);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ScannerRegistrationSettings {\n");

        sb.append("    url: ").append(toIndentedString(url)).append("\n");
        sb.append("    accessCredential: ").append(toIndentedString(accessCredential)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

