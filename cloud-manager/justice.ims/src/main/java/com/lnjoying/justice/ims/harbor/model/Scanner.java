/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * Scanner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class Scanner
{
    @JsonProperty("version")
    private String version = null;

    @JsonProperty("vendor")
    private String vendor = null;

    @JsonProperty("name")
    private String name = null;

    public Scanner version(String version)
    {
        this.version = version;
        return this;
    }

    /**
     * Version of the scanner adapter
     *
     * @return version
     **/
    @ApiModelProperty(example = "v0.9.1", value = "Version of the scanner adapter")
    public String getVersion()
    {
        return version;
    }

    public void setVersion(String version)
    {
        this.version = version;
    }

    public Scanner vendor(String vendor)
    {
        this.vendor = vendor;
        return this;
    }

    /**
     * Name of the scanner provider
     *
     * @return vendor
     **/
    @ApiModelProperty(example = "Aqua Security", value = "Name of the scanner provider")
    public String getVendor()
    {
        return vendor;
    }

    public void setVendor(String vendor)
    {
        this.vendor = vendor;
    }

    public Scanner name(String name)
    {
        this.name = name;
        return this;
    }

    /**
     * Name of the scanner
     *
     * @return name
     **/
    @ApiModelProperty(example = "Trivy", value = "Name of the scanner")
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        Scanner scanner = (Scanner) o;
        return Objects.equals(this.version, scanner.version) &&
                Objects.equals(this.vendor, scanner.vendor) &&
                Objects.equals(this.name, scanner.name);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(version, vendor, name);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class Scanner {\n");

        sb.append("    version: ").append(toIndentedString(version)).append("\n");
        sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

