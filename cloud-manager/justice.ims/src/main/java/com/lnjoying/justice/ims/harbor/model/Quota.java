/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * The quota object
 */
@ApiModel(description = "The quota object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class Quota
{
    @JsonProperty("update_time")
    private OffsetDateTime updateTime = null;

    @JsonProperty("used")
    private ResourceList used = null;

    @JsonProperty("ref")
    private QuotaRefObject ref = null;

    @JsonProperty("hard")
    private ResourceList hard = null;

    @JsonProperty("creation_time")
    private OffsetDateTime creationTime = null;

    @JsonProperty("id")
    private Integer id = null;

    public Quota updateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * the update time of the quota
     *
     * @return updateTime
     **/
    @ApiModelProperty(value = "the update time of the quota")
    public OffsetDateTime getUpdateTime()
    {
        return updateTime;
    }

    public void setUpdateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
    }

    public Quota used(ResourceList used)
    {
        this.used = used;
        return this;
    }

    /**
     * The used status of the quota
     *
     * @return used
     **/
    @ApiModelProperty(value = "The used status of the quota")
    public ResourceList getUsed()
    {
        return used;
    }

    public void setUsed(ResourceList used)
    {
        this.used = used;
    }

    public Quota ref(QuotaRefObject ref)
    {
        this.ref = ref;
        return this;
    }

    /**
     * The reference object of the quota
     *
     * @return ref
     **/
    @ApiModelProperty(value = "The reference object of the quota")
    public QuotaRefObject getRef()
    {
        return ref;
    }

    public void setRef(QuotaRefObject ref)
    {
        this.ref = ref;
    }

    public Quota hard(ResourceList hard)
    {
        this.hard = hard;
        return this;
    }

    /**
     * The hard limits of the quota
     *
     * @return hard
     **/
    @ApiModelProperty(value = "The hard limits of the quota")
    public ResourceList getHard()
    {
        return hard;
    }

    public void setHard(ResourceList hard)
    {
        this.hard = hard;
    }

    public Quota creationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * the creation time of the quota
     *
     * @return creationTime
     **/
    @ApiModelProperty(value = "the creation time of the quota")
    public OffsetDateTime getCreationTime()
    {
        return creationTime;
    }

    public void setCreationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
    }

    public Quota id(Integer id)
    {
        this.id = id;
        return this;
    }

    /**
     * ID of the quota
     *
     * @return id
     **/
    @ApiModelProperty(value = "ID of the quota")
    public Integer getId()
    {
        return id;
    }

    public void setId(Integer id)
    {
        this.id = id;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        Quota quota = (Quota) o;
        return Objects.equals(this.updateTime, quota.updateTime) &&
                Objects.equals(this.used, quota.used) &&
                Objects.equals(this.ref, quota.ref) &&
                Objects.equals(this.hard, quota.hard) &&
                Objects.equals(this.creationTime, quota.creationTime) &&
                Objects.equals(this.id, quota.id);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(updateTime, used, ref, hard, creationTime, id);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class Quota {\n");

        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    used: ").append(toIndentedString(used)).append("\n");
        sb.append("    ref: ").append(toIndentedString(ref)).append("\n");
        sb.append("    hard: ").append(toIndentedString(hard)).append("\n");
        sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

