/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * the tag retention rule metadata
 */
@ApiModel(description = "the tag retention rule metadata")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class RetentionRuleMetadata
{
    @JsonProperty("display_text")
    private String displayText = null;

    @JsonProperty("action")
    private String action = null;

    @JsonProperty("params")
    private List<RetentionRuleParamMetadata> params = null;

    @JsonProperty("rule_template")
    private String ruleTemplate = null;

    public RetentionRuleMetadata displayText(String displayText)
    {
        this.displayText = displayText;
        return this;
    }

    /**
     * rule display text
     *
     * @return displayText
     **/
    @ApiModelProperty(value = "rule display text")
    public String getDisplayText()
    {
        return displayText;
    }

    public void setDisplayText(String displayText)
    {
        this.displayText = displayText;
    }

    public RetentionRuleMetadata action(String action)
    {
        this.action = action;
        return this;
    }

    /**
     * rule action
     *
     * @return action
     **/
    @ApiModelProperty(value = "rule action")
    public String getAction()
    {
        return action;
    }

    public void setAction(String action)
    {
        this.action = action;
    }

    public RetentionRuleMetadata params(List<RetentionRuleParamMetadata> params)
    {
        this.params = params;
        return this;
    }

    public RetentionRuleMetadata addParamsItem(RetentionRuleParamMetadata paramsItem)
    {
        if (this.params == null)
        {
            this.params = new ArrayList<>();
        }
        this.params.add(paramsItem);
        return this;
    }

    /**
     * rule params
     *
     * @return params
     **/
    @ApiModelProperty(value = "rule params")
    public List<RetentionRuleParamMetadata> getParams()
    {
        return params;
    }

    public void setParams(List<RetentionRuleParamMetadata> params)
    {
        this.params = params;
    }

    public RetentionRuleMetadata ruleTemplate(String ruleTemplate)
    {
        this.ruleTemplate = ruleTemplate;
        return this;
    }

    /**
     * rule id
     *
     * @return ruleTemplate
     **/
    @ApiModelProperty(value = "rule id")
    public String getRuleTemplate()
    {
        return ruleTemplate;
    }

    public void setRuleTemplate(String ruleTemplate)
    {
        this.ruleTemplate = ruleTemplate;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RetentionRuleMetadata retentionRuleMetadata = (RetentionRuleMetadata) o;
        return Objects.equals(this.displayText, retentionRuleMetadata.displayText) &&
                Objects.equals(this.action, retentionRuleMetadata.action) &&
                Objects.equals(this.params, retentionRuleMetadata.params) &&
                Objects.equals(this.ruleTemplate, retentionRuleMetadata.ruleTemplate);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(displayText, action, params, ruleTemplate);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RetentionRuleMetadata {\n");

        sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
        sb.append("    action: ").append(toIndentedString(action)).append("\n");
        sb.append("    params: ").append(toIndentedString(params)).append("\n");
        sb.append("    ruleTemplate: ").append(toIndentedString(ruleTemplate)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

