/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * The replication execution
 */
@ApiModel(description = "The replication execution")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class ReplicationExecution
{
    @JsonProperty("status")
    private String status = null;

    @JsonProperty("status_text")
    private String statusText = null;

    @JsonProperty("trigger")
    private String trigger = null;

    @JsonProperty("start_time")
    private OffsetDateTime startTime = null;

    @JsonProperty("failed")
    private Integer failed = null;

    @JsonProperty("succeed")
    private Integer succeed = null;

    @JsonProperty("stopped")
    private Integer stopped = null;

    @JsonProperty("end_time")
    private OffsetDateTime endTime = null;

    @JsonProperty("in_progress")
    private Integer inProgress = null;

    @JsonProperty("total")
    private Integer total = null;

    @JsonProperty("id")
    private Integer id = null;

    @JsonProperty("policy_id")
    private Integer policyId = null;

    public ReplicationExecution status(String status)
    {
        this.status = status;
        return this;
    }

    /**
     * The status of the execution
     *
     * @return status
     **/
    @ApiModelProperty(value = "The status of the execution")
    public String getStatus()
    {
        return status;
    }

    public void setStatus(String status)
    {
        this.status = status;
    }

    public ReplicationExecution statusText(String statusText)
    {
        this.statusText = statusText;
        return this;
    }

    /**
     * The status text
     *
     * @return statusText
     **/
    @ApiModelProperty(value = "The status text")
    public String getStatusText()
    {
        return statusText;
    }

    public void setStatusText(String statusText)
    {
        this.statusText = statusText;
    }

    public ReplicationExecution trigger(String trigger)
    {
        this.trigger = trigger;
        return this;
    }

    /**
     * The trigger mode
     *
     * @return trigger
     **/
    @ApiModelProperty(value = "The trigger mode")
    public String getTrigger()
    {
        return trigger;
    }

    public void setTrigger(String trigger)
    {
        this.trigger = trigger;
    }

    public ReplicationExecution startTime(OffsetDateTime startTime)
    {
        this.startTime = startTime;
        return this;
    }

    /**
     * The start time
     *
     * @return startTime
     **/
    @ApiModelProperty(value = "The start time")
    public OffsetDateTime getStartTime()
    {
        return startTime;
    }

    public void setStartTime(OffsetDateTime startTime)
    {
        this.startTime = startTime;
    }

    public ReplicationExecution failed(Integer failed)
    {
        this.failed = failed;
        return this;
    }

    /**
     * The count of failed executions
     *
     * @return failed
     **/
    @ApiModelProperty(value = "The count of failed executions")
    public Integer getFailed()
    {
        return failed;
    }

    public void setFailed(Integer failed)
    {
        this.failed = failed;
    }

    public ReplicationExecution succeed(Integer succeed)
    {
        this.succeed = succeed;
        return this;
    }

    /**
     * The count of succeed executions
     *
     * @return succeed
     **/
    @ApiModelProperty(value = "The count of succeed executions")
    public Integer getSucceed()
    {
        return succeed;
    }

    public void setSucceed(Integer succeed)
    {
        this.succeed = succeed;
    }

    public ReplicationExecution stopped(Integer stopped)
    {
        this.stopped = stopped;
        return this;
    }

    /**
     * The count of stopped executions
     *
     * @return stopped
     **/
    @ApiModelProperty(value = "The count of stopped executions")
    public Integer getStopped()
    {
        return stopped;
    }

    public void setStopped(Integer stopped)
    {
        this.stopped = stopped;
    }

    public ReplicationExecution endTime(OffsetDateTime endTime)
    {
        this.endTime = endTime;
        return this;
    }

    /**
     * The end time
     *
     * @return endTime
     **/
    @ApiModelProperty(value = "The end time")
    public OffsetDateTime getEndTime()
    {
        return endTime;
    }

    public void setEndTime(OffsetDateTime endTime)
    {
        this.endTime = endTime;
    }

    public ReplicationExecution inProgress(Integer inProgress)
    {
        this.inProgress = inProgress;
        return this;
    }

    /**
     * The count of in_progress executions
     *
     * @return inProgress
     **/
    @ApiModelProperty(value = "The count of in_progress executions")
    public Integer getInProgress()
    {
        return inProgress;
    }

    public void setInProgress(Integer inProgress)
    {
        this.inProgress = inProgress;
    }

    public ReplicationExecution total(Integer total)
    {
        this.total = total;
        return this;
    }

    /**
     * The total count of all executions
     *
     * @return total
     **/
    @ApiModelProperty(value = "The total count of all executions")
    public Integer getTotal()
    {
        return total;
    }

    public void setTotal(Integer total)
    {
        this.total = total;
    }

    public ReplicationExecution id(Integer id)
    {
        this.id = id;
        return this;
    }

    /**
     * The ID of the execution
     *
     * @return id
     **/
    @ApiModelProperty(value = "The ID of the execution")
    public Integer getId()
    {
        return id;
    }

    public void setId(Integer id)
    {
        this.id = id;
    }

    public ReplicationExecution policyId(Integer policyId)
    {
        this.policyId = policyId;
        return this;
    }

    /**
     * The ID if the policy that the execution belongs to
     *
     * @return policyId
     **/
    @ApiModelProperty(value = "The ID if the policy that the execution belongs to")
    public Integer getPolicyId()
    {
        return policyId;
    }

    public void setPolicyId(Integer policyId)
    {
        this.policyId = policyId;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ReplicationExecution replicationExecution = (ReplicationExecution) o;
        return Objects.equals(this.status, replicationExecution.status) &&
                Objects.equals(this.statusText, replicationExecution.statusText) &&
                Objects.equals(this.trigger, replicationExecution.trigger) &&
                Objects.equals(this.startTime, replicationExecution.startTime) &&
                Objects.equals(this.failed, replicationExecution.failed) &&
                Objects.equals(this.succeed, replicationExecution.succeed) &&
                Objects.equals(this.stopped, replicationExecution.stopped) &&
                Objects.equals(this.endTime, replicationExecution.endTime) &&
                Objects.equals(this.inProgress, replicationExecution.inProgress) &&
                Objects.equals(this.total, replicationExecution.total) &&
                Objects.equals(this.id, replicationExecution.id) &&
                Objects.equals(this.policyId, replicationExecution.policyId);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(status, statusText, trigger, startTime, failed, succeed, stopped, endTime, inProgress, total, id, policyId);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReplicationExecution {\n");

        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    statusText: ").append(toIndentedString(statusText)).append("\n");
        sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
        sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
        sb.append("    failed: ").append(toIndentedString(failed)).append("\n");
        sb.append("    succeed: ").append(toIndentedString(succeed)).append("\n");
        sb.append("    stopped: ").append(toIndentedString(stopped)).append("\n");
        sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
        sb.append("    inProgress: ").append(toIndentedString(inProgress)).append("\n");
        sb.append("    total: ").append(toIndentedString(total)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

