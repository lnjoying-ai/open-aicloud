/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * PreheatPolicy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class PreheatPolicy
{
    @JsonProperty("provider_id")
    private Integer providerId = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("enabled")
    private Boolean enabled = null;

    @JsonProperty("creation_time")
    private OffsetDateTime creationTime = null;

    @JsonProperty("update_time")
    private OffsetDateTime updateTime = null;

    @JsonProperty("trigger")
    private String trigger = null;

    @JsonProperty("filters")
    private String filters = null;

    @JsonProperty("provider_name")
    private String providerName = null;

    @JsonProperty("project_id")
    private Integer projectId = null;

    @JsonProperty("id")
    private Integer id = null;

    @JsonProperty("name")
    private String name = null;

    public PreheatPolicy providerId(Integer providerId)
    {
        this.providerId = providerId;
        return this;
    }

    /**
     * The ID of preheat policy provider
     *
     * @return providerId
     **/
    @ApiModelProperty(value = "The ID of preheat policy provider")
    public Integer getProviderId()
    {
        return providerId;
    }

    public void setProviderId(Integer providerId)
    {
        this.providerId = providerId;
    }

    public PreheatPolicy description(String description)
    {
        this.description = description;
        return this;
    }

    /**
     * The Description of preheat policy
     *
     * @return description
     **/
    @ApiModelProperty(value = "The Description of preheat policy")
    public String getDescription()
    {
        return description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    public PreheatPolicy enabled(Boolean enabled)
    {
        this.enabled = enabled;
        return this;
    }

    /**
     * Whether the preheat policy enabled
     *
     * @return enabled
     **/
    @ApiModelProperty(value = "Whether the preheat policy enabled")
    public Boolean isEnabled()
    {
        return enabled;
    }

    public void setEnabled(Boolean enabled)
    {
        this.enabled = enabled;
    }

    public PreheatPolicy creationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * The Create Time of preheat policy
     *
     * @return creationTime
     **/
    @ApiModelProperty(value = "The Create Time of preheat policy")
    public OffsetDateTime getCreationTime()
    {
        return creationTime;
    }

    public void setCreationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
    }

    public PreheatPolicy updateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * The Update Time of preheat policy
     *
     * @return updateTime
     **/
    @ApiModelProperty(value = "The Update Time of preheat policy")
    public OffsetDateTime getUpdateTime()
    {
        return updateTime;
    }

    public void setUpdateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
    }

    public PreheatPolicy trigger(String trigger)
    {
        this.trigger = trigger;
        return this;
    }

    /**
     * The Trigger of preheat policy
     *
     * @return trigger
     **/
    @ApiModelProperty(value = "The Trigger of preheat policy")
    public String getTrigger()
    {
        return trigger;
    }

    public void setTrigger(String trigger)
    {
        this.trigger = trigger;
    }

    public PreheatPolicy filters(String filters)
    {
        this.filters = filters;
        return this;
    }

    /**
     * The Filters of preheat policy
     *
     * @return filters
     **/
    @ApiModelProperty(value = "The Filters of preheat policy")
    public String getFilters()
    {
        return filters;
    }

    public void setFilters(String filters)
    {
        this.filters = filters;
    }

    public PreheatPolicy providerName(String providerName)
    {
        this.providerName = providerName;
        return this;
    }

    /**
     * The Name of preheat policy provider
     *
     * @return providerName
     **/
    @ApiModelProperty(value = "The Name of preheat policy provider")
    public String getProviderName()
    {
        return providerName;
    }

    public void setProviderName(String providerName)
    {
        this.providerName = providerName;
    }

    public PreheatPolicy projectId(Integer projectId)
    {
        this.projectId = projectId;
        return this;
    }

    /**
     * The ID of preheat policy project
     *
     * @return projectId
     **/
    @ApiModelProperty(value = "The ID of preheat policy project")
    public Integer getProjectId()
    {
        return projectId;
    }

    public void setProjectId(Integer projectId)
    {
        this.projectId = projectId;
    }

    public PreheatPolicy id(Integer id)
    {
        this.id = id;
        return this;
    }

    /**
     * The ID of preheat policy
     *
     * @return id
     **/
    @ApiModelProperty(value = "The ID of preheat policy")
    public Integer getId()
    {
        return id;
    }

    public void setId(Integer id)
    {
        this.id = id;
    }

    public PreheatPolicy name(String name)
    {
        this.name = name;
        return this;
    }

    /**
     * The Name of preheat policy
     *
     * @return name
     **/
    @ApiModelProperty(value = "The Name of preheat policy")
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        PreheatPolicy preheatPolicy = (PreheatPolicy) o;
        return Objects.equals(this.providerId, preheatPolicy.providerId) &&
                Objects.equals(this.description, preheatPolicy.description) &&
                Objects.equals(this.enabled, preheatPolicy.enabled) &&
                Objects.equals(this.creationTime, preheatPolicy.creationTime) &&
                Objects.equals(this.updateTime, preheatPolicy.updateTime) &&
                Objects.equals(this.trigger, preheatPolicy.trigger) &&
                Objects.equals(this.filters, preheatPolicy.filters) &&
                Objects.equals(this.providerName, preheatPolicy.providerName) &&
                Objects.equals(this.projectId, preheatPolicy.projectId) &&
                Objects.equals(this.id, preheatPolicy.id) &&
                Objects.equals(this.name, preheatPolicy.name);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(providerId, description, enabled, creationTime, updateTime, trigger, filters, providerName, projectId, id, name);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class PreheatPolicy {\n");

        sb.append("    providerId: ").append(toIndentedString(providerId)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
        sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
        sb.append("    providerName: ").append(toIndentedString(providerName)).append("\n");
        sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

