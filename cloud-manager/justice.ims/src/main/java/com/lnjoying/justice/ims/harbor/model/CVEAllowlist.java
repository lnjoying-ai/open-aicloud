/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

import org.threeten.bp.OffsetDateTime;

/**
 * The CVE Allowlist for system or project
 */
@ApiModel(description = "The CVE Allowlist for system or project")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class CVEAllowlist
{
    @JsonProperty("update_time")
    private OffsetDateTime updateTime = null;

    @JsonProperty("items")
    private List<CVEAllowlistItem> items = null;

    @JsonProperty("project_id")
    private Integer projectId = null;

    @JsonProperty("creation_time")
    private OffsetDateTime creationTime = null;

    @JsonProperty("id")
    private Integer id = null;

    @JsonProperty("expires_at")
    private Integer expiresAt = null;

    public CVEAllowlist updateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * The update time of the allowlist.
     *
     * @return updateTime
     **/
    @ApiModelProperty(value = "The update time of the allowlist.")
    public OffsetDateTime getUpdateTime()
    {
        return updateTime;
    }

    public void setUpdateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
    }

    public CVEAllowlist items(List<CVEAllowlistItem> items)
    {
        this.items = items;
        return this;
    }

    public CVEAllowlist addItemsItem(CVEAllowlistItem itemsItem)
    {
        if (this.items == null)
        {
            this.items = new ArrayList<>();
        }
        this.items.add(itemsItem);
        return this;
    }

    /**
     * Get items
     *
     * @return items
     **/
    @ApiModelProperty(value = "")
    public List<CVEAllowlistItem> getItems()
    {
        return items;
    }

    public void setItems(List<CVEAllowlistItem> items)
    {
        this.items = items;
    }

    public CVEAllowlist projectId(Integer projectId)
    {
        this.projectId = projectId;
        return this;
    }

    /**
     * ID of the project which the allowlist belongs to.  For system level allowlist this attribute is zero.
     *
     * @return projectId
     **/
    @ApiModelProperty(value = "ID of the project which the allowlist belongs to.  For system level allowlist this attribute is zero.")
    public Integer getProjectId()
    {
        return projectId;
    }

    public void setProjectId(Integer projectId)
    {
        this.projectId = projectId;
    }

    public CVEAllowlist creationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * The creation time of the allowlist.
     *
     * @return creationTime
     **/
    @ApiModelProperty(value = "The creation time of the allowlist.")
    public OffsetDateTime getCreationTime()
    {
        return creationTime;
    }

    public void setCreationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
    }

    public CVEAllowlist id(Integer id)
    {
        this.id = id;
        return this;
    }

    /**
     * ID of the allowlist
     *
     * @return id
     **/
    @ApiModelProperty(value = "ID of the allowlist")
    public Integer getId()
    {
        return id;
    }

    public void setId(Integer id)
    {
        this.id = id;
    }

    public CVEAllowlist expiresAt(Integer expiresAt)
    {
        this.expiresAt = expiresAt;
        return this;
    }

    /**
     * the time for expiration of the allowlist, in the form of seconds since epoch.  This is an optional attribute, if it&#39;s not set the CVE allowlist does not expire.
     *
     * @return expiresAt
     **/
    @ApiModelProperty(value = "the time for expiration of the allowlist, in the form of seconds since epoch.  This is an optional attribute, if it's not set the CVE allowlist does not expire.")
    public Integer getExpiresAt()
    {
        return expiresAt;
    }

    public void setExpiresAt(Integer expiresAt)
    {
        this.expiresAt = expiresAt;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        CVEAllowlist cvEAllowlist = (CVEAllowlist) o;
        return Objects.equals(this.updateTime, cvEAllowlist.updateTime) &&
                Objects.equals(this.items, cvEAllowlist.items) &&
                Objects.equals(this.projectId, cvEAllowlist.projectId) &&
                Objects.equals(this.creationTime, cvEAllowlist.creationTime) &&
                Objects.equals(this.id, cvEAllowlist.id) &&
                Objects.equals(this.expiresAt, cvEAllowlist.expiresAt);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(updateTime, items, projectId, creationTime, id, expiresAt);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class CVEAllowlist {\n");

        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    items: ").append(toIndentedString(items)).append("\n");
        sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
        sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

