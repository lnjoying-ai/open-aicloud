/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

/**
 * retention selector
 */
@ApiModel(description = "retention selector")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class RetentionSelectorMetadata
{
    @JsonProperty("display_text")
    private String displayText = null;

    @JsonProperty("kind")
    private String kind = null;

    @JsonProperty("decorations")
    private List<String> decorations = null;

    public RetentionSelectorMetadata displayText(String displayText)
    {
        this.displayText = displayText;
        return this;
    }

    /**
     * Get displayText
     *
     * @return displayText
     **/
    @ApiModelProperty(value = "")
    public String getDisplayText()
    {
        return displayText;
    }

    public void setDisplayText(String displayText)
    {
        this.displayText = displayText;
    }

    public RetentionSelectorMetadata kind(String kind)
    {
        this.kind = kind;
        return this;
    }

    /**
     * Get kind
     *
     * @return kind
     **/
    @ApiModelProperty(value = "")
    public String getKind()
    {
        return kind;
    }

    public void setKind(String kind)
    {
        this.kind = kind;
    }

    public RetentionSelectorMetadata decorations(List<String> decorations)
    {
        this.decorations = decorations;
        return this;
    }

    public RetentionSelectorMetadata addDecorationsItem(String decorationsItem)
    {
        if (this.decorations == null)
        {
            this.decorations = new ArrayList<>();
        }
        this.decorations.add(decorationsItem);
        return this;
    }

    /**
     * Get decorations
     *
     * @return decorations
     **/
    @ApiModelProperty(value = "")
    public List<String> getDecorations()
    {
        return decorations;
    }

    public void setDecorations(List<String> decorations)
    {
        this.decorations = decorations;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        RetentionSelectorMetadata retentionSelectorMetadata = (RetentionSelectorMetadata) o;
        return Objects.equals(this.displayText, retentionSelectorMetadata.displayText) &&
                Objects.equals(this.kind, retentionSelectorMetadata.kind) &&
                Objects.equals(this.decorations, retentionSelectorMetadata.decorations);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(displayText, kind, decorations);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class RetentionSelectorMetadata {\n");

        sb.append("    displayText: ").append(toIndentedString(displayText)).append("\n");
        sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
        sb.append("    decorations: ").append(toIndentedString(decorations)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

