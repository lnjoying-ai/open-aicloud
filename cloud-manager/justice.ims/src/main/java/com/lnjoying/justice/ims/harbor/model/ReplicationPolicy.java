/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

import org.threeten.bp.OffsetDateTime;

/**
 * ReplicationPolicy
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class ReplicationPolicy
{
    @JsonProperty("update_time")
    private OffsetDateTime updateTime = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("dest_namespace_replace_count")
    private Integer destNamespaceReplaceCount = null;

    @JsonProperty("filters")
    private List<ReplicationFilter> filters = null;

    @JsonProperty("dest_registry")
    private Registry destRegistry = null;

    @JsonProperty("creation_time")
    private OffsetDateTime creationTime = null;

    @JsonProperty("src_registry")
    private Registry srcRegistry = null;

    @JsonProperty("dest_namespace")
    private String destNamespace = null;

    @JsonProperty("trigger")
    private ReplicationTrigger trigger = null;

    @JsonProperty("replicate_deletion")
    private Boolean replicateDeletion = null;

    @JsonProperty("deletion")
    private Boolean deletion = null;

    @JsonProperty("override")
    private Boolean override = null;

    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("enabled")
    private Boolean enabled = null;

    @JsonProperty("name")
    private String name = null;

    public ReplicationPolicy updateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * The update time of the policy.
     *
     * @return updateTime
     **/
    @ApiModelProperty(value = "The update time of the policy.")
    public OffsetDateTime getUpdateTime()
    {
        return updateTime;
    }

    public void setUpdateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
    }

    public ReplicationPolicy description(String description)
    {
        this.description = description;
        return this;
    }

    /**
     * The description of the policy.
     *
     * @return description
     **/
    @ApiModelProperty(value = "The description of the policy.")
    public String getDescription()
    {
        return description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    public ReplicationPolicy destNamespaceReplaceCount(Integer destNamespaceReplaceCount)
    {
        this.destNamespaceReplaceCount = destNamespaceReplaceCount;
        return this;
    }

    /**
     * Specify how many path components will be replaced by the provided destination namespace. The default value is -1 in which case the legacy mode will be applied.
     *
     * @return destNamespaceReplaceCount
     **/
    @ApiModelProperty(value = "Specify how many path components will be replaced by the provided destination namespace. The default value is -1 in which case the legacy mode will be applied.")
    public Integer getDestNamespaceReplaceCount()
    {
        return destNamespaceReplaceCount;
    }

    public void setDestNamespaceReplaceCount(Integer destNamespaceReplaceCount)
    {
        this.destNamespaceReplaceCount = destNamespaceReplaceCount;
    }

    public ReplicationPolicy filters(List<ReplicationFilter> filters)
    {
        this.filters = filters;
        return this;
    }

    public ReplicationPolicy addFiltersItem(ReplicationFilter filtersItem)
    {
        if (this.filters == null)
        {
            this.filters = new ArrayList<>();
        }
        this.filters.add(filtersItem);
        return this;
    }

    /**
     * The replication policy filter array.
     *
     * @return filters
     **/
    @ApiModelProperty(value = "The replication policy filter array.")
    public List<ReplicationFilter> getFilters()
    {
        return filters;
    }

    public void setFilters(List<ReplicationFilter> filters)
    {
        this.filters = filters;
    }

    public ReplicationPolicy destRegistry(Registry destRegistry)
    {
        this.destRegistry = destRegistry;
        return this;
    }

    /**
     * The destination registry.
     *
     * @return destRegistry
     **/
    @ApiModelProperty(value = "The destination registry.")
    public Registry getDestRegistry()
    {
        return destRegistry;
    }

    public void setDestRegistry(Registry destRegistry)
    {
        this.destRegistry = destRegistry;
    }

    public ReplicationPolicy creationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * The create time of the policy.
     *
     * @return creationTime
     **/
    @ApiModelProperty(value = "The create time of the policy.")
    public OffsetDateTime getCreationTime()
    {
        return creationTime;
    }

    public void setCreationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
    }

    public ReplicationPolicy srcRegistry(Registry srcRegistry)
    {
        this.srcRegistry = srcRegistry;
        return this;
    }

    /**
     * The source registry.
     *
     * @return srcRegistry
     **/
    @ApiModelProperty(value = "The source registry.")
    public Registry getSrcRegistry()
    {
        return srcRegistry;
    }

    public void setSrcRegistry(Registry srcRegistry)
    {
        this.srcRegistry = srcRegistry;
    }

    public ReplicationPolicy destNamespace(String destNamespace)
    {
        this.destNamespace = destNamespace;
        return this;
    }

    /**
     * The destination namespace.
     *
     * @return destNamespace
     **/
    @ApiModelProperty(value = "The destination namespace.")
    public String getDestNamespace()
    {
        return destNamespace;
    }

    public void setDestNamespace(String destNamespace)
    {
        this.destNamespace = destNamespace;
    }

    public ReplicationPolicy trigger(ReplicationTrigger trigger)
    {
        this.trigger = trigger;
        return this;
    }

    /**
     * Get trigger
     *
     * @return trigger
     **/
    @ApiModelProperty(value = "")
    public ReplicationTrigger getTrigger()
    {
        return trigger;
    }

    public void setTrigger(ReplicationTrigger trigger)
    {
        this.trigger = trigger;
    }

    public ReplicationPolicy replicateDeletion(Boolean replicateDeletion)
    {
        this.replicateDeletion = replicateDeletion;
        return this;
    }

    /**
     * Whether to replicate the deletion operation.
     *
     * @return replicateDeletion
     **/
    @ApiModelProperty(value = "Whether to replicate the deletion operation.")
    public Boolean isReplicateDeletion()
    {
        return replicateDeletion;
    }

    public void setReplicateDeletion(Boolean replicateDeletion)
    {
        this.replicateDeletion = replicateDeletion;
    }

    public ReplicationPolicy deletion(Boolean deletion)
    {
        this.deletion = deletion;
        return this;
    }

    /**
     * Deprecated, use \&quot;replicate_deletion\&quot; instead. Whether to replicate the deletion operation.
     *
     * @return deletion
     **/
    @ApiModelProperty(value = "Deprecated, use \"replicate_deletion\" instead. Whether to replicate the deletion operation.")
    public Boolean isDeletion()
    {
        return deletion;
    }

    public void setDeletion(Boolean deletion)
    {
        this.deletion = deletion;
    }

    public ReplicationPolicy override(Boolean override)
    {
        this.override = override;
        return this;
    }

    /**
     * Whether to override the resources on the destination registry.
     *
     * @return override
     **/
    @ApiModelProperty(value = "Whether to override the resources on the destination registry.")
    public Boolean isOverride()
    {
        return override;
    }

    public void setOverride(Boolean override)
    {
        this.override = override;
    }

    public ReplicationPolicy id(Long id)
    {
        this.id = id;
        return this;
    }

    /**
     * The policy ID.
     *
     * @return id
     **/
    @ApiModelProperty(value = "The policy ID.")
    public Long getId()
    {
        return id;
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public ReplicationPolicy enabled(Boolean enabled)
    {
        this.enabled = enabled;
        return this;
    }

    /**
     * Whether the policy is enabled or not.
     *
     * @return enabled
     **/
    @ApiModelProperty(value = "Whether the policy is enabled or not.")
    public Boolean isEnabled()
    {
        return enabled;
    }

    public void setEnabled(Boolean enabled)
    {
        this.enabled = enabled;
    }

    public ReplicationPolicy name(String name)
    {
        this.name = name;
        return this;
    }

    /**
     * The policy name.
     *
     * @return name
     **/
    @ApiModelProperty(value = "The policy name.")
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        ReplicationPolicy replicationPolicy = (ReplicationPolicy) o;
        return Objects.equals(this.updateTime, replicationPolicy.updateTime) &&
                Objects.equals(this.description, replicationPolicy.description) &&
                Objects.equals(this.destNamespaceReplaceCount, replicationPolicy.destNamespaceReplaceCount) &&
                Objects.equals(this.filters, replicationPolicy.filters) &&
                Objects.equals(this.destRegistry, replicationPolicy.destRegistry) &&
                Objects.equals(this.creationTime, replicationPolicy.creationTime) &&
                Objects.equals(this.srcRegistry, replicationPolicy.srcRegistry) &&
                Objects.equals(this.destNamespace, replicationPolicy.destNamespace) &&
                Objects.equals(this.trigger, replicationPolicy.trigger) &&
                Objects.equals(this.replicateDeletion, replicationPolicy.replicateDeletion) &&
                Objects.equals(this.deletion, replicationPolicy.deletion) &&
                Objects.equals(this.override, replicationPolicy.override) &&
                Objects.equals(this.id, replicationPolicy.id) &&
                Objects.equals(this.enabled, replicationPolicy.enabled) &&
                Objects.equals(this.name, replicationPolicy.name);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(updateTime, description, destNamespaceReplaceCount, filters, destRegistry, creationTime, srcRegistry, destNamespace, trigger, replicateDeletion, deletion, override, id, enabled, name);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class ReplicationPolicy {\n");

        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    destNamespaceReplaceCount: ").append(toIndentedString(destNamespaceReplaceCount)).append("\n");
        sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
        sb.append("    destRegistry: ").append(toIndentedString(destRegistry)).append("\n");
        sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
        sb.append("    srcRegistry: ").append(toIndentedString(srcRegistry)).append("\n");
        sb.append("    destNamespace: ").append(toIndentedString(destNamespace)).append("\n");
        sb.append("    trigger: ").append(toIndentedString(trigger)).append("\n");
        sb.append("    replicateDeletion: ").append(toIndentedString(replicateDeletion)).append("\n");
        sb.append("    deletion: ").append(toIndentedString(deletion)).append("\n");
        sb.append("    override: ").append(toIndentedString(override)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

