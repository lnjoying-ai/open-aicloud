/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.threeten.bp.OffsetDateTime;

/**
 * The webhook job.
 */
@ApiModel(description = "The webhook job.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class WebhookJob
{
    @JsonProperty("status")
    private String status = null;

    @JsonProperty("update_time")
    private OffsetDateTime updateTime = null;

    @JsonProperty("event_type")
    private String eventType = null;

    @JsonProperty("creation_time")
    private OffsetDateTime creationTime = null;

    @JsonProperty("job_detail")
    private String jobDetail = null;

    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("notify_type")
    private String notifyType = null;

    @JsonProperty("policy_id")
    private Long policyId = null;

    public WebhookJob status(String status)
    {
        this.status = status;
        return this;
    }

    /**
     * The webhook job status.
     *
     * @return status
     **/
    @ApiModelProperty(value = "The webhook job status.")
    public String getStatus()
    {
        return status;
    }

    public void setStatus(String status)
    {
        this.status = status;
    }

    public WebhookJob updateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * The webhook job update time.
     *
     * @return updateTime
     **/
    @ApiModelProperty(value = "The webhook job update time.")
    public OffsetDateTime getUpdateTime()
    {
        return updateTime;
    }

    public void setUpdateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
    }

    public WebhookJob eventType(String eventType)
    {
        this.eventType = eventType;
        return this;
    }

    /**
     * The webhook job event type.
     *
     * @return eventType
     **/
    @ApiModelProperty(value = "The webhook job event type.")
    public String getEventType()
    {
        return eventType;
    }

    public void setEventType(String eventType)
    {
        this.eventType = eventType;
    }

    public WebhookJob creationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * The webhook job creation time.
     *
     * @return creationTime
     **/
    @ApiModelProperty(value = "The webhook job creation time.")
    public OffsetDateTime getCreationTime()
    {
        return creationTime;
    }

    public void setCreationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
    }

    public WebhookJob jobDetail(String jobDetail)
    {
        this.jobDetail = jobDetail;
        return this;
    }

    /**
     * The webhook job notify detailed data.
     *
     * @return jobDetail
     **/
    @ApiModelProperty(value = "The webhook job notify detailed data.")
    public String getJobDetail()
    {
        return jobDetail;
    }

    public void setJobDetail(String jobDetail)
    {
        this.jobDetail = jobDetail;
    }

    public WebhookJob id(Long id)
    {
        this.id = id;
        return this;
    }

    /**
     * The webhook job ID.
     *
     * @return id
     **/
    @ApiModelProperty(value = "The webhook job ID.")
    public Long getId()
    {
        return id;
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public WebhookJob notifyType(String notifyType)
    {
        this.notifyType = notifyType;
        return this;
    }

    /**
     * The webhook job notify type.
     *
     * @return notifyType
     **/
    @ApiModelProperty(value = "The webhook job notify type.")
    public String getNotifyType()
    {
        return notifyType;
    }

    public void setNotifyType(String notifyType)
    {
        this.notifyType = notifyType;
    }

    public WebhookJob policyId(Long policyId)
    {
        this.policyId = policyId;
        return this;
    }

    /**
     * The webhook policy ID.
     *
     * @return policyId
     **/
    @ApiModelProperty(value = "The webhook policy ID.")
    public Long getPolicyId()
    {
        return policyId;
    }

    public void setPolicyId(Long policyId)
    {
        this.policyId = policyId;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        WebhookJob webhookJob = (WebhookJob) o;
        return Objects.equals(this.status, webhookJob.status) &&
                Objects.equals(this.updateTime, webhookJob.updateTime) &&
                Objects.equals(this.eventType, webhookJob.eventType) &&
                Objects.equals(this.creationTime, webhookJob.creationTime) &&
                Objects.equals(this.jobDetail, webhookJob.jobDetail) &&
                Objects.equals(this.id, webhookJob.id) &&
                Objects.equals(this.notifyType, webhookJob.notifyType) &&
                Objects.equals(this.policyId, webhookJob.policyId);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(status, updateTime, eventType, creationTime, jobDetail, id, notifyType, policyId);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class WebhookJob {\n");

        sb.append("    status: ").append(toIndentedString(status)).append("\n");
        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
        sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
        sb.append("    jobDetail: ").append(toIndentedString(jobDetail)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    notifyType: ").append(toIndentedString(notifyType)).append("\n");
        sb.append("    policyId: ").append(toIndentedString(policyId)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

