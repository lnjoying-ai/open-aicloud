/*
 * Harbor API
 * These APIs provide services for manipulating Harbor project.
 *
 * OpenAPI spec version: 2.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.lnjoying.justice.ims.harbor.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;

import org.threeten.bp.OffsetDateTime;

/**
 * The webhook policy object
 */
@ApiModel(description = "The webhook policy object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-08-31T16:17:12.981+08:00")
public class WebhookPolicy
{
    @JsonProperty("update_time")
    private OffsetDateTime updateTime = null;

    @JsonProperty("description")
    private String description = null;

    @JsonProperty("creator")
    private String creator = null;

    @JsonProperty("creation_time")
    private OffsetDateTime creationTime = null;

    @JsonProperty("enabled")
    private Boolean enabled = null;

    @JsonProperty("targets")
    private List<WebhookTargetObject> targets = null;

    @JsonProperty("event_types")
    private List<String> eventTypes = null;

    @JsonProperty("project_id")
    private Integer projectId = null;

    @JsonProperty("id")
    private Long id = null;

    @JsonProperty("name")
    private String name = null;

    public WebhookPolicy updateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
        return this;
    }

    /**
     * The update time of the webhook policy.
     *
     * @return updateTime
     **/
    @ApiModelProperty(value = "The update time of the webhook policy.")
    public OffsetDateTime getUpdateTime()
    {
        return updateTime;
    }

    public void setUpdateTime(OffsetDateTime updateTime)
    {
        this.updateTime = updateTime;
    }

    public WebhookPolicy description(String description)
    {
        this.description = description;
        return this;
    }

    /**
     * The description of webhook policy.
     *
     * @return description
     **/
    @ApiModelProperty(value = "The description of webhook policy.")
    public String getDescription()
    {
        return description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }

    public WebhookPolicy creator(String creator)
    {
        this.creator = creator;
        return this;
    }

    /**
     * The creator of the webhook policy.
     *
     * @return creator
     **/
    @ApiModelProperty(value = "The creator of the webhook policy.")
    public String getCreator()
    {
        return creator;
    }

    public void setCreator(String creator)
    {
        this.creator = creator;
    }

    public WebhookPolicy creationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
        return this;
    }

    /**
     * The create time of the webhook policy.
     *
     * @return creationTime
     **/
    @ApiModelProperty(value = "The create time of the webhook policy.")
    public OffsetDateTime getCreationTime()
    {
        return creationTime;
    }

    public void setCreationTime(OffsetDateTime creationTime)
    {
        this.creationTime = creationTime;
    }

    public WebhookPolicy enabled(Boolean enabled)
    {
        this.enabled = enabled;
        return this;
    }

    /**
     * Whether the webhook policy is enabled or not.
     *
     * @return enabled
     **/
    @ApiModelProperty(value = "Whether the webhook policy is enabled or not.")
    public Boolean isEnabled()
    {
        return enabled;
    }

    public void setEnabled(Boolean enabled)
    {
        this.enabled = enabled;
    }

    public WebhookPolicy targets(List<WebhookTargetObject> targets)
    {
        this.targets = targets;
        return this;
    }

    public WebhookPolicy addTargetsItem(WebhookTargetObject targetsItem)
    {
        if (this.targets == null)
        {
            this.targets = new ArrayList<>();
        }
        this.targets.add(targetsItem);
        return this;
    }

    /**
     * Get targets
     *
     * @return targets
     **/
    @ApiModelProperty(value = "")
    public List<WebhookTargetObject> getTargets()
    {
        return targets;
    }

    public void setTargets(List<WebhookTargetObject> targets)
    {
        this.targets = targets;
    }

    public WebhookPolicy eventTypes(List<String> eventTypes)
    {
        this.eventTypes = eventTypes;
        return this;
    }

    public WebhookPolicy addEventTypesItem(String eventTypesItem)
    {
        if (this.eventTypes == null)
        {
            this.eventTypes = new ArrayList<>();
        }
        this.eventTypes.add(eventTypesItem);
        return this;
    }

    /**
     * Get eventTypes
     *
     * @return eventTypes
     **/
    @ApiModelProperty(value = "")
    public List<String> getEventTypes()
    {
        return eventTypes;
    }

    public void setEventTypes(List<String> eventTypes)
    {
        this.eventTypes = eventTypes;
    }

    public WebhookPolicy projectId(Integer projectId)
    {
        this.projectId = projectId;
        return this;
    }

    /**
     * The project ID of webhook policy.
     *
     * @return projectId
     **/
    @ApiModelProperty(value = "The project ID of webhook policy.")
    public Integer getProjectId()
    {
        return projectId;
    }

    public void setProjectId(Integer projectId)
    {
        this.projectId = projectId;
    }

    public WebhookPolicy id(Long id)
    {
        this.id = id;
        return this;
    }

    /**
     * The webhook policy ID.
     *
     * @return id
     **/
    @ApiModelProperty(value = "The webhook policy ID.")
    public Long getId()
    {
        return id;
    }

    public void setId(Long id)
    {
        this.id = id;
    }

    public WebhookPolicy name(String name)
    {
        this.name = name;
        return this;
    }

    /**
     * The name of webhook policy.
     *
     * @return name
     **/
    @ApiModelProperty(value = "The name of webhook policy.")
    public String getName()
    {
        return name;
    }

    public void setName(String name)
    {
        this.name = name;
    }


    @Override
    public boolean equals(Object o)
    {
        if (this == o)
        {
            return true;
        }
        if (o == null || getClass() != o.getClass())
        {
            return false;
        }
        WebhookPolicy webhookPolicy = (WebhookPolicy) o;
        return Objects.equals(this.updateTime, webhookPolicy.updateTime) &&
                Objects.equals(this.description, webhookPolicy.description) &&
                Objects.equals(this.creator, webhookPolicy.creator) &&
                Objects.equals(this.creationTime, webhookPolicy.creationTime) &&
                Objects.equals(this.enabled, webhookPolicy.enabled) &&
                Objects.equals(this.targets, webhookPolicy.targets) &&
                Objects.equals(this.eventTypes, webhookPolicy.eventTypes) &&
                Objects.equals(this.projectId, webhookPolicy.projectId) &&
                Objects.equals(this.id, webhookPolicy.id) &&
                Objects.equals(this.name, webhookPolicy.name);
    }

    @Override
    public int hashCode()
    {
        return Objects.hash(updateTime, description, creator, creationTime, enabled, targets, eventTypes, projectId, id, name);
    }


    @Override
    public String toString()
    {
        StringBuilder sb = new StringBuilder();
        sb.append("class WebhookPolicy {\n");

        sb.append("    updateTime: ").append(toIndentedString(updateTime)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    creator: ").append(toIndentedString(creator)).append("\n");
        sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
        sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
        sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
        sb.append("    eventTypes: ").append(toIndentedString(eventTypes)).append("\n");
        sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o)
    {
        if (o == null)
        {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

