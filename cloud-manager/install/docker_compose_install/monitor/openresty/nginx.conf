user root;
env ADMIN_USER;
env ADMIN_PASSWORD;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 1024;
        multi_accept on;
}

http {

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        ##
        # SSL Settings
        ##

       # ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
        #ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##

        access_log /usr/local/openresty/nginx/logs/access.log;
        error_log  /usr/local/openresty/nginx/logs/error.log debug;
        lua_package_path "/usr/local/openresty/lnjoying/resty/?.lua;/usr/local/openresty/lualib/resty/?.lua;;";
        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        #include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

    #	map $http_upgrade $connection_upgrade {
    #		default $http_upgrade;
    #		https   websocket;
#	}

#	map $scheme $proxy_connection_upgrade {
 #   		default $http_upgrade;
  #  		http    websocket;
#	}

	proxy_cache_path /tmp/public  levels=1:2 keys_zone=grafana_cache:10m;

	lua_shared_dict env 1m;
        init_by_lua_block {
		cjson = require "cjson";
        http = require "resty.http";
        local username = os.getenv("ADMIN_USER")
        local password = os.getenv("ADMIN_PASSWORD")

        if username and password then
                local credentials = ngx.encode_base64(username .. ":" .. password)
             ngx.shared.env:set("basic_auth_credentials", "Basic " .. credentials)
         end
	 }

     server {
        listen       9090 ssl;
        server_name  prometheus;

        ssl_certificate /opt/ssl/ssl.pem;
        ssl_certificate_key /opt/ssl/ssl.key;
        ssl_client_certificate   /opt/ssl/ssl.pem;
        ssl_session_timeout 5m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers on;

        location / {
            access_by_lua_file /usr/local/openresty/lnjoying/resty/auth.lua;

            proxy_pass http://prometheus:9090;
        }
    }

    server {
        listen       9093;
        server_name  alertmanager;

        location / {
            access_by_lua_file /usr/local/openresty/lnjoying/resty/auth.lua;

            proxy_pass http://alertmanager:9093;
        }
    }



    server {
        listen 19085;
        #listen 80;
        #server_name dev.lnjoying.io;

    #ssl_certificate /root/dev.lnjoying.io_bundle.pem;
    #ssl_certificate_key /root/dev.lnjoying.io.key;
    #ssl_certificate /root/lnjoying.com.crt;
    #ssl_certificate_key /root/lnjoying.com.key;
    #ssl_session_timeout 5m;
        location / {
            root /root/dist;
                    access_log on;
                    autoindex  on;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

    location  /omc/v1/dashboards{
            set $monitor_url 'http://localhost:8055/api/omc/v1/dashboards/has-permission';
            set $monitor_agent_server 'localhost:13000';
            access_by_lua_file /usr/local/openresty/lnjoying/resty/monitor.lua;
            rewrite_by_lua_file /usr/local/openresty/lnjoying/resty/param_rewrite.lua;
            proxy_pass http://localhost:13000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_ssl_verify off;
        }

        location /omc/v1/dashboards/public/ {
            proxy_cache grafana_cache;
             proxy_cache_valid 200 302 10m;
            proxy_cache_valid 404 1m;

             proxy_cache_key "$scheme$host$request_uri";

            proxy_pass http://localhost:13000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;

        }



        location /omc/v1/dashboards/avatar/ {

            proxy_pass http://localhost:13000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;

        }


    location /omc/v1/dashboards/api/live{
           header_filter_by_lua '
            ngx.req.set_header("Authorization", ngx.shared.env:get("basic_auth_credentials"))
        ';
            proxy_pass http://localhost:13000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;
            proxy_set_header Upgrade "websocket";
            proxy_set_header Connection "upgrade";
        }

        location /omc/v1/dashboards/api/live/ws{
                proxy_pass http://localhost:13000;
                proxy_http_version 1.1;
                proxy_set_header Host $http_host;
                proxy_set_header Upgrade "websocket";
                proxy_set_header Connection "upgrade";
            }


        location /omc/v1/dashboards/api/{
            access_by_lua_file /usr/local/openresty/lnjoying/resty/basic_auth.lua;

            proxy_pass http://localhost:13000;
            proxy_http_version 1.1;
            proxy_set_header Host $http_host;

        }

        error_page 401 = /index.html;

    }
}

