<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lnjoying.justice.cmp.db.mapper.TblCmpHypervisorNodeMapper">
  <resultMap id="BaseResultMap" type="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNode">
    <id column="cloud_id" jdbcType="VARCHAR" property="cloudId" />
    <id column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="instance_id" jdbcType="VARCHAR" property="instanceId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phase_status" jdbcType="INTEGER" property="phaseStatus" />
    <result column="manage_ip" jdbcType="VARCHAR" property="manageIp" />
    <result column="host_name" jdbcType="VARCHAR" property="hostName" />
    <result column="sys_username" jdbcType="VARCHAR" property="sysUsername" />
    <result column="sys_password" jdbcType="VARCHAR" property="sysPassword" />
    <result column="pubkey_id" jdbcType="VARCHAR" property="pubkeyId" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="backup_node_id" jdbcType="VARCHAR" property="backupNodeId" />
    <result column="error_count" jdbcType="INTEGER" property="errorCount" />
    <result column="cpu_model" jdbcType="VARCHAR" property="cpuModel" />
    <result column="cpu_log_count" jdbcType="INTEGER" property="cpuLogCount" />
    <result column="mem_total" jdbcType="INTEGER" property="memTotal" />
    <result column="cpu_phy_count" jdbcType="INTEGER" property="cpuPhyCount" />
    <result column="ee_bp" jdbcType="VARCHAR" property="eeBp" />
    <result column="ee_user" jdbcType="VARCHAR" property="eeUser" />
    <result column="ee_status" jdbcType="INTEGER" property="eeStatus" />
    <result column="available_ib_count" jdbcType="INTEGER" property="availableIbCount" />
    <result column="ib_count" jdbcType="INTEGER" property="ibCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    cloud_id, node_id, instance_id, name, phase_status, manage_ip, host_name, sys_username, 
    sys_password, pubkey_id, description, create_time, update_time, backup_node_id, error_count, 
    cpu_model, cpu_log_count, mem_total, cpu_phy_count, ee_bp, ee_user, ee_status, available_ib_count, 
    ib_count
  </sql>
  <select id="selectByExample" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tbl_cmp_hypervisor_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{pageSize} offset #{startRow}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNodeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_cmp_hypervisor_node
    where cloud_id = #{cloudId,jdbcType=VARCHAR}
      and node_id = #{nodeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNodeKey">
    delete from tbl_cmp_hypervisor_node
    where cloud_id = #{cloudId,jdbcType=VARCHAR}
      and node_id = #{nodeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNodeExample">
    delete from tbl_cmp_hypervisor_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNode">
    insert into tbl_cmp_hypervisor_node (cloud_id, node_id, instance_id, 
      name, phase_status, manage_ip, 
      host_name, sys_username, sys_password, 
      pubkey_id, description, create_time, 
      update_time, backup_node_id, error_count, 
      cpu_model, cpu_log_count, mem_total, 
      cpu_phy_count, ee_bp, ee_user, 
      ee_status, available_ib_count, ib_count
      )
    values (#{cloudId,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{instanceId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{phaseStatus,jdbcType=INTEGER}, #{manageIp,jdbcType=VARCHAR}, 
      #{hostName,jdbcType=VARCHAR}, #{sysUsername,jdbcType=VARCHAR}, #{sysPassword,jdbcType=VARCHAR}, 
      #{pubkeyId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{backupNodeId,jdbcType=VARCHAR}, #{errorCount,jdbcType=INTEGER}, 
      #{cpuModel,jdbcType=VARCHAR}, #{cpuLogCount,jdbcType=INTEGER}, #{memTotal,jdbcType=INTEGER}, 
      #{cpuPhyCount,jdbcType=INTEGER}, #{eeBp,jdbcType=VARCHAR}, #{eeUser,jdbcType=VARCHAR}, 
      #{eeStatus,jdbcType=INTEGER}, #{availableIbCount,jdbcType=INTEGER}, #{ibCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNode">
    insert into tbl_cmp_hypervisor_node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cloudId != null">
        cloud_id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="instanceId != null">
        instance_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="phaseStatus != null">
        phase_status,
      </if>
      <if test="manageIp != null">
        manage_ip,
      </if>
      <if test="hostName != null">
        host_name,
      </if>
      <if test="sysUsername != null">
        sys_username,
      </if>
      <if test="sysPassword != null">
        sys_password,
      </if>
      <if test="pubkeyId != null">
        pubkey_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="backupNodeId != null">
        backup_node_id,
      </if>
      <if test="errorCount != null">
        error_count,
      </if>
      <if test="cpuModel != null">
        cpu_model,
      </if>
      <if test="cpuLogCount != null">
        cpu_log_count,
      </if>
      <if test="memTotal != null">
        mem_total,
      </if>
      <if test="cpuPhyCount != null">
        cpu_phy_count,
      </if>
      <if test="eeBp != null">
        ee_bp,
      </if>
      <if test="eeUser != null">
        ee_user,
      </if>
      <if test="eeStatus != null">
        ee_status,
      </if>
      <if test="availableIbCount != null">
        available_ib_count,
      </if>
      <if test="ibCount != null">
        ib_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cloudId != null">
        #{cloudId,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="instanceId != null">
        #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phaseStatus != null">
        #{phaseStatus,jdbcType=INTEGER},
      </if>
      <if test="manageIp != null">
        #{manageIp,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="sysUsername != null">
        #{sysUsername,jdbcType=VARCHAR},
      </if>
      <if test="sysPassword != null">
        #{sysPassword,jdbcType=VARCHAR},
      </if>
      <if test="pubkeyId != null">
        #{pubkeyId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backupNodeId != null">
        #{backupNodeId,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null">
        #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="cpuModel != null">
        #{cpuModel,jdbcType=VARCHAR},
      </if>
      <if test="cpuLogCount != null">
        #{cpuLogCount,jdbcType=INTEGER},
      </if>
      <if test="memTotal != null">
        #{memTotal,jdbcType=INTEGER},
      </if>
      <if test="cpuPhyCount != null">
        #{cpuPhyCount,jdbcType=INTEGER},
      </if>
      <if test="eeBp != null">
        #{eeBp,jdbcType=VARCHAR},
      </if>
      <if test="eeUser != null">
        #{eeUser,jdbcType=VARCHAR},
      </if>
      <if test="eeStatus != null">
        #{eeStatus,jdbcType=INTEGER},
      </if>
      <if test="availableIbCount != null">
        #{availableIbCount,jdbcType=INTEGER},
      </if>
      <if test="ibCount != null">
        #{ibCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNodeExample" resultType="java.lang.Long">
    select count(*) from tbl_cmp_hypervisor_node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tbl_cmp_hypervisor_node
    <set>
      <if test="record.cloudId != null">
        cloud_id = #{record.cloudId,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.instanceId != null">
        instance_id = #{record.instanceId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.phaseStatus != null">
        phase_status = #{record.phaseStatus,jdbcType=INTEGER},
      </if>
      <if test="record.manageIp != null">
        manage_ip = #{record.manageIp,jdbcType=VARCHAR},
      </if>
      <if test="record.hostName != null">
        host_name = #{record.hostName,jdbcType=VARCHAR},
      </if>
      <if test="record.sysUsername != null">
        sys_username = #{record.sysUsername,jdbcType=VARCHAR},
      </if>
      <if test="record.sysPassword != null">
        sys_password = #{record.sysPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.pubkeyId != null">
        pubkey_id = #{record.pubkeyId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.backupNodeId != null">
        backup_node_id = #{record.backupNodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.errorCount != null">
        error_count = #{record.errorCount,jdbcType=INTEGER},
      </if>
      <if test="record.cpuModel != null">
        cpu_model = #{record.cpuModel,jdbcType=VARCHAR},
      </if>
      <if test="record.cpuLogCount != null">
        cpu_log_count = #{record.cpuLogCount,jdbcType=INTEGER},
      </if>
      <if test="record.memTotal != null">
        mem_total = #{record.memTotal,jdbcType=INTEGER},
      </if>
      <if test="record.cpuPhyCount != null">
        cpu_phy_count = #{record.cpuPhyCount,jdbcType=INTEGER},
      </if>
      <if test="record.eeBp != null">
        ee_bp = #{record.eeBp,jdbcType=VARCHAR},
      </if>
      <if test="record.eeUser != null">
        ee_user = #{record.eeUser,jdbcType=VARCHAR},
      </if>
      <if test="record.eeStatus != null">
        ee_status = #{record.eeStatus,jdbcType=INTEGER},
      </if>
      <if test="record.availableIbCount != null">
        available_ib_count = #{record.availableIbCount,jdbcType=INTEGER},
      </if>
      <if test="record.ibCount != null">
        ib_count = #{record.ibCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tbl_cmp_hypervisor_node
    set cloud_id = #{record.cloudId,jdbcType=VARCHAR},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      instance_id = #{record.instanceId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      phase_status = #{record.phaseStatus,jdbcType=INTEGER},
      manage_ip = #{record.manageIp,jdbcType=VARCHAR},
      host_name = #{record.hostName,jdbcType=VARCHAR},
      sys_username = #{record.sysUsername,jdbcType=VARCHAR},
      sys_password = #{record.sysPassword,jdbcType=VARCHAR},
      pubkey_id = #{record.pubkeyId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      backup_node_id = #{record.backupNodeId,jdbcType=VARCHAR},
      error_count = #{record.errorCount,jdbcType=INTEGER},
      cpu_model = #{record.cpuModel,jdbcType=VARCHAR},
      cpu_log_count = #{record.cpuLogCount,jdbcType=INTEGER},
      mem_total = #{record.memTotal,jdbcType=INTEGER},
      cpu_phy_count = #{record.cpuPhyCount,jdbcType=INTEGER},
      ee_bp = #{record.eeBp,jdbcType=VARCHAR},
      ee_user = #{record.eeUser,jdbcType=VARCHAR},
      ee_status = #{record.eeStatus,jdbcType=INTEGER},
      available_ib_count = #{record.availableIbCount,jdbcType=INTEGER},
      ib_count = #{record.ibCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNode">
    update tbl_cmp_hypervisor_node
    <set>
      <if test="instanceId != null">
        instance_id = #{instanceId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phaseStatus != null">
        phase_status = #{phaseStatus,jdbcType=INTEGER},
      </if>
      <if test="manageIp != null">
        manage_ip = #{manageIp,jdbcType=VARCHAR},
      </if>
      <if test="hostName != null">
        host_name = #{hostName,jdbcType=VARCHAR},
      </if>
      <if test="sysUsername != null">
        sys_username = #{sysUsername,jdbcType=VARCHAR},
      </if>
      <if test="sysPassword != null">
        sys_password = #{sysPassword,jdbcType=VARCHAR},
      </if>
      <if test="pubkeyId != null">
        pubkey_id = #{pubkeyId,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="backupNodeId != null">
        backup_node_id = #{backupNodeId,jdbcType=VARCHAR},
      </if>
      <if test="errorCount != null">
        error_count = #{errorCount,jdbcType=INTEGER},
      </if>
      <if test="cpuModel != null">
        cpu_model = #{cpuModel,jdbcType=VARCHAR},
      </if>
      <if test="cpuLogCount != null">
        cpu_log_count = #{cpuLogCount,jdbcType=INTEGER},
      </if>
      <if test="memTotal != null">
        mem_total = #{memTotal,jdbcType=INTEGER},
      </if>
      <if test="cpuPhyCount != null">
        cpu_phy_count = #{cpuPhyCount,jdbcType=INTEGER},
      </if>
      <if test="eeBp != null">
        ee_bp = #{eeBp,jdbcType=VARCHAR},
      </if>
      <if test="eeUser != null">
        ee_user = #{eeUser,jdbcType=VARCHAR},
      </if>
      <if test="eeStatus != null">
        ee_status = #{eeStatus,jdbcType=INTEGER},
      </if>
      <if test="availableIbCount != null">
        available_ib_count = #{availableIbCount,jdbcType=INTEGER},
      </if>
      <if test="ibCount != null">
        ib_count = #{ibCount,jdbcType=INTEGER},
      </if>
    </set>
    where cloud_id = #{cloudId,jdbcType=VARCHAR}
      and node_id = #{nodeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lnjoying.justice.cmp.db.model.TblCmpHypervisorNode">
    update tbl_cmp_hypervisor_node
    set instance_id = #{instanceId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phase_status = #{phaseStatus,jdbcType=INTEGER},
      manage_ip = #{manageIp,jdbcType=VARCHAR},
      host_name = #{hostName,jdbcType=VARCHAR},
      sys_username = #{sysUsername,jdbcType=VARCHAR},
      sys_password = #{sysPassword,jdbcType=VARCHAR},
      pubkey_id = #{pubkeyId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      backup_node_id = #{backupNodeId,jdbcType=VARCHAR},
      error_count = #{errorCount,jdbcType=INTEGER},
      cpu_model = #{cpuModel,jdbcType=VARCHAR},
      cpu_log_count = #{cpuLogCount,jdbcType=INTEGER},
      mem_total = #{memTotal,jdbcType=INTEGER},
      cpu_phy_count = #{cpuPhyCount,jdbcType=INTEGER},
      ee_bp = #{eeBp,jdbcType=VARCHAR},
      ee_user = #{eeUser,jdbcType=VARCHAR},
      ee_status = #{eeStatus,jdbcType=INTEGER},
      available_ib_count = #{availableIbCount,jdbcType=INTEGER},
      ib_count = #{ibCount,jdbcType=INTEGER}
    where cloud_id = #{cloudId,jdbcType=VARCHAR}
      and node_id = #{nodeId,jdbcType=VARCHAR}
  </update>
  <select id="getNodeIds" resultType="String">
    select node_id from tbl_cmp_hypervisor_node
    where cloud_id = #{cloudId} and ee_status != -1
  </select>

  <resultMap id="HypervisorNodeInfoMap" type="com.lnjoying.justice.cmp.domain.dto.response.nextstack.vm.HypervisorNodeInfo">
    <id column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="node_name" jdbcType="VARCHAR" property="nodeName" />
    <result column="manage_ip" jdbcType="VARCHAR" property="manageIp" />
    <result column="available_gpu_count" jdbcType="INTEGER" property="availableGpuCount" />
    <result column="pci_device_phase_status" jdbcType="INTEGER" property="pciDevicePhaseStatus" />
    <result column="node_phase_status" jdbcType="INTEGER" property="nodePhaseStatus" />
    <result column="type" jdbcType="INTEGER" property="pciDeviceType" />
    <result column="pci_device_group_id" jdbcType="VARCHAR" property="pciDeviceGroupId" />
    <result column="mem_total" jdbcType="INTEGER" property="memTotal" />
    <result column="cpu_log_count" jdbcType="INTEGER" property="cpuLogCount" />
    <result column="cpu_model" jdbcType="VARCHAR" property="cpuModel" />

  </resultMap>
  <select id="selectCustomNodeInfo" resultMap="HypervisorNodeInfoMap">
    SELECT tbl_cmp_hypervisor_node.node_id, tbl_cmp_hypervisor_node.name as node_name, tbl_cmp_hypervisor_node.mem_total,
    tbl_cmp_hypervisor_node.cpu_log_count, tbl_cmp_hypervisor_node.cpu_model, tbl_cmp_hypervisor_node.manage_ip
    FROM tbl_cmp_hypervisor_node LEFT JOIN tbl_cmp_pci_device on tbl_cmp_hypervisor_node.node_id = tbl_cmp_pci_device.node_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{pageSize} offset #{startRow}
    </if>
  </select>

  <select id="selectGpuNodeInfo" resultMap="HypervisorNodeInfoMap">
    SELECT tbl_cmp_hypervisor_node.node_id, tbl_cmp_hypervisor_node.name as node_name, tbl_cmp_hypervisor_node.mem_total,
    tbl_cmp_hypervisor_node.cpu_log_count, tbl_cmp_hypervisor_node.cpu_model, tbl_cmp_hypervisor_node.manage_ip, available_gpu_count
    FROM (
        SELECT tbl_cmp_hypervisor_node.node_id, count(tbl_cmp_pci_device.device_id) as available_gpu_count
        FROM tbl_cmp_hypervisor_node LEFT JOIN tbl_cmp_pci_device on tbl_cmp_hypervisor_node.node_id = tbl_cmp_pci_device.node_id
        <if test="_parameter != null">
          <include refid="Example_Where_Clause" />
        </if>
        GROUP BY tbl_cmp_hypervisor_node.node_id ) t
    LEFT JOIN tbl_cmp_hypervisor_node on t.node_id = tbl_cmp_hypervisor_node.node_id
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{pageSize} offset #{startRow}
    </if>
  </select>

  <resultMap id="HypervisorNodeAllocationInfoMap" type="com.lnjoying.justice.cmp.domain.dto.response.nextstack.vm.HypervisorNodeAllocationInfo">
    <id column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="manage_ip" jdbcType="VARCHAR" property="manageIp" />
    <result column="mem_total" jdbcType="VARCHAR" property="memTotal" />
    <result column="cpu_log_count" jdbcType="VARCHAR" property="cpuLogCount" />
    <result column="cpu_model" jdbcType="VARCHAR" property="cpuModel" />
    <result column="cpu_sum" jdbcType="INTEGER" property="cpuSum" />
    <result column="mem_sum" jdbcType="INTEGER" property="memSum" />
    <result column="node_phase_status" jdbcType="INTEGER" property="nodePhaseStatus" />
    <result column="vm_instance_phase_status" jdbcType="INTEGER" property="vmInstancePhaseStatus" />
    <result column="available_ib_count" jdbcType="INTEGER" property="availableIbCount" />
    <result column="error_count" jdbcType="INTEGER" property="errorCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ib_count" jdbcType="TIMESTAMP" property="ibTotal" />
    <result column="mem_recycle" jdbcType="INTEGER" property="memRecycle" />
    <result column="cpu_recycle" jdbcType="INTEGER" property="cpuRecycle" />
  </resultMap>
  <select id="selectNodeAllocationInfo" resultMap="HypervisorNodeAllocationInfoMap">
    SELECT sub1.name, sub1.manage_ip, sub1.mem_total, sub1.cpu_log_count,sub1.cpu_model, sub1.node_id, sub1.available_ib_count,
           sub1.phase_status as node_phase_status, sub1.error_count, sub1.create_time, sub1.ib_count, COALESCE(sub1.CPU_SUM,0) as CPU_SUM,
           COALESCE(sub1.MEM_SUM,0) as MEM_SUM, COALESCE(sub1.mem_recycle,0) as mem_recycle, COALESCE(sub1.cpu_recycle,0) as cpu_recycle
    FROM ( SELECT tbl_cmp_hypervisor_node.name, tbl_cmp_hypervisor_node.manage_ip, tbl_cmp_hypervisor_node.error_count, tbl_cmp_hypervisor_node.create_time,
                  tbl_cmp_hypervisor_node.mem_total, tbl_cmp_hypervisor_node.cpu_log_count, tbl_cmp_hypervisor_node.cpu_model, tbl_cmp_hypervisor_node.node_id,
                  tbl_cmp_hypervisor_node.available_ib_count, tbl_cmp_hypervisor_node.ib_count, tbl_cmp_hypervisor_node.phase_status, CPU_SUM, MEM_SUM, mem_recycle, cpu_recycle
                FROM ( SELECT tbl_cmp_hypervisor_node.node_id,
                              SUM ( CASE WHEN tbl_cmp_vm_instance.cpu_count is  NULL THEN tbl_cmp_flavor.cpu ELSE tbl_cmp_vm_instance.cpu_count END ) as CPU_SUM,
                              SUM ( CASE WHEN tbl_cmp_vm_instance.mem_size  is NULL THEN tbl_cmp_flavor.mem ELSE tbl_cmp_vm_instance.mem_size END ) as MEM_SUM,
                              SUM ( CASE WHEN tbl_cmp_vm_instance.recycle_mem_size IS NULL THEN 0 ELSE tbl_cmp_vm_instance.recycle_mem_size END ) AS mem_recycle,
                              SUM ( CASE WHEN tbl_cmp_vm_instance.recycle_cpu_count IS NULL THEN 0 ELSE tbl_cmp_vm_instance.recycle_cpu_count END ) AS cpu_recycle
                        FROM tbl_cmp_hypervisor_node
                            LEFT JOIN tbl_cmp_vm_instance ON tbl_cmp_hypervisor_node.node_id = tbl_cmp_vm_instance.node_id
                            AND tbl_cmp_hypervisor_node.cloud_id = tbl_cmp_vm_instance.cloud_id and tbl_cmp_hypervisor_node.ee_status = tbl_cmp_vm_instance.ee_status
                            LEFT JOIN tbl_cmp_flavor ON tbl_cmp_vm_instance.flavor_id = tbl_cmp_flavor.flavor_id
                            AND tbl_cmp_vm_instance.cloud_id = tbl_cmp_flavor.cloud_id AND tbl_cmp_vm_instance.ee_status = tbl_cmp_flavor.ee_status
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
                        GROUP BY tbl_cmp_hypervisor_node.node_id ) sub
                    LEFT JOIN tbl_cmp_hypervisor_node ON sub.node_id = tbl_cmp_hypervisor_node.node_id
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{pageSize} offset #{startRow}
    </if>
    ) sub1
  </select>

  <resultMap id="AvailableGPURspMap" type="com.lnjoying.justice.cmp.domain.dto.response.nextstack.vm.AvailableGPURsp">
    <id column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="gpuName" jdbcType="VARCHAR" property="gpuName" />
    <result column="gpuCount" jdbcType="INTEGER" property="gpuCount" />
  </resultMap>
  <select id="selectAvailableGPURspByNameAndCount" resultMap="AvailableGPURspMap">
    SELECT * from
    (SELECT tbl_cmp_pci_device.name as gpuName, COUNT (tbl_cmp_pci_device.device_id) as gpuCount, tbl_cmp_hypervisor_node.node_id
    FROM tbl_cmp_pci_device
    LEFT JOIN tbl_cmp_hypervisor_node ON tbl_cmp_pci_device.node_id = tbl_cmp_hypervisor_node.node_id
    WHERE
    tbl_cmp_hypervisor_node.phase_status = 40 and tbl_cmp_pci_device.name = #{gpuName} and tbl_cmp_pci_device.vm_instance_id is null
    <if test="cloudId != null">
      and tbl_cmp_pci_device.cloud_id = #{cloudId,jdbcType=VARCHAR} and tbl_cmp_pci_device.ee_status != -1
      and tbl_cmp_hypervisor_node.cloud_id = #{cloudId,jdbcType=VARCHAR} and tbl_cmp_hypervisor_node.ee_status != -1
    </if>
    and tbl_cmp_hypervisor_node.available_ib_count &gt;= #{ibCount}
    GROUP BY (tbl_cmp_pci_device.NAME, tbl_cmp_hypervisor_node.node_id )) as gpuNode
    where gpuNode.gpuCount &gt;= #{gpuCount} limit  #{size} offset #{index}
  </select>
  <select id="selectTotalAvailableGPURspByNameAndCount" resultType="long">
    SELECT count(*) from
    (SELECT tbl_cmp_pci_device.NAME, COUNT (tbl_cmp_pci_device.device_id) as gpuCount, tbl_cmp_hypervisor_node.node_id
    FROM tbl_cmp_pci_device
    LEFT JOIN tbl_cmp_hypervisor_node ON tbl_cmp_pci_device.node_id = tbl_cmp_hypervisor_node.node_id
    WHERE
    tbl_cmp_hypervisor_node.phase_status = 40 and tbl_cmp_pci_device.name = #{gpuName} and tbl_cmp_pci_device.vm_instance_id is null
    <if test="cloudId != null">
      and tbl_cmp_pci_device.cloud_id = #{cloudId,jdbcType=VARCHAR} and tbl_cmp_pci_device.ee_status != -1
      and tbl_cmp_hypervisor_node.cloud_id = #{cloudId,jdbcType=VARCHAR} and tbl_cmp_hypervisor_node.ee_status != -1
    </if>
    GROUP BY (tbl_cmp_pci_device.NAME, tbl_cmp_hypervisor_node.node_id )) as gpuNode
    where gpuNode.gpuCount &gt;= #{gpuCount}
  </select>
  <select id="selectAvailableGPURsp" resultMap="AvailableGPURspMap">
    SELECT tbl_cmp_pci_device.name as gpuName, COUNT (tbl_cmp_pci_device.device_id) as gpuCount, tbl_cmp_hypervisor_node.node_id
    FROM tbl_cmp_pci_device
    LEFT JOIN tbl_cmp_hypervisor_node ON tbl_cmp_pci_device.node_id = tbl_cmp_hypervisor_node.node_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    and tbl_cmp_hypervisor_node.phase_status = 40 and tbl_cmp_pci_device.vm_instance_id is null
    GROUP BY (tbl_cmp_pci_device.NAME, tbl_cmp_hypervisor_node.node_id )
  </select>

  <select id="getIbTotalByCloudIdAndGpu" resultType="int">
    SELECT SUM (CASE WHEN ib_count IS NULL THEN 0 ELSE ib_count END) AS ibTotal
    FROM
    (SELECT DISTINCT node_id FROM tbl_cmp_pci_device
    WHERE cloud_id = #{cloudId,jdbcType=VARCHAR} and ee_status != -1 and name = #{gpuName,jdbcType=VARCHAR}) t1
    LEFT JOIN tbl_cmp_hypervisor_node on tbl_cmp_hypervisor_node.node_id = t1.node_id
    AND ee_status != -1
  </select>
  <select id="getAvailableIbCountByCloudIdAndGpu" resultType="int">
    SELECT SUM (CASE WHEN available_ib_count IS NULL THEN 0 ELSE available_ib_count END) AS availableIbCount
    FROM
      (SELECT DISTINCT node_id FROM tbl_cmp_pci_device
       WHERE cloud_id = #{cloudId,jdbcType=VARCHAR} and ee_status != -1 and name = #{gpuName,jdbcType=VARCHAR}) t1
        LEFT JOIN tbl_cmp_hypervisor_node on tbl_cmp_hypervisor_node.node_id = t1.node_id
        AND ee_status != -1
  </select>
</mapper>